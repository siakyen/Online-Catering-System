
    public static void addItem(List<Item> foodList) {
        Scanner input = new Scanner(System.in);
        String category = "", itemName;
        String itemPrice;
        String itemCategory;

        Item item = new Item();
        boolean validationItemName;
        do {
            validationItemName = true;
            System.out.printf("Please enter the Item Name: ");
            itemName = input.nextLine();
            if (itemName.isEmpty()) {
                validationItemName = false;
                System.out.println("\n** Please fill in the item name **\n");
            } else {
                validationItemName = true;
            }
        } while (validationItemName == false);

        boolean validationItemPrice;
        do {
            validationItemPrice = true;
            System.out.printf("Please enter the Item Price: ");
            itemPrice = input.nextLine();
            if (itemPrice.isEmpty()) {
                validationItemPrice = false;
                System.out.println("\n** Please fill in the item Price **\n");
            } else {
                if (!validateItemPrice(itemPrice)) {
                    validationItemPrice = false;
                    System.out.println("\n** Invalid Item Price **\n");
                }
            }
        } while (validationItemPrice == false);

        boolean validationItemCategory ;
        do {
            validationItemCategory = true;
            System.out.println("\nFood Category");
            System.out.println("1. Food");
            System.out.println("2. Beverage");
            System.out.println("3. Dessert");
            System.out.printf("Please select the Item Category: ");
            itemCategory = input.nextLine();
            if (itemCategory.isEmpty()) {
                validationItemCategory = false;
                System.out.println("\n** Please fill in the item Category **\n");
            } else {
                if (!validateItemCategory(itemCategory)) {
                    validationItemCategory = false;
                    System.out.println("\n** Invalid Category number **\n");
                }
            }
        } while (validationItemCategory == false);
        switch (itemCategory) {
            case "1":
                category = "Food";
                break;
            case "2":
                category = "Beverage";
                break;
            case "3":
                category = "Dessert";
                break;
        }
        double intItemPrice = Double.parseDouble(itemPrice);
        item = new Item(item.assignItemID(category), itemName, intItemPrice, category);
        foodList.add(item);
        System.out.println("Add successfully");
    }

    public static boolean validateItemPrice(String price) {

        int count=0;
        //check are all digits?
        for (int i = 0; i < price.length(); i++) {
            if (Character.isDigit(price.charAt(i)) == false) {
                if (price.charAt(i) != '.') {
                    return false;
                }else{
                    count++;
                }
            }
        }
        if(count>1){
            return false;
        }

        return true;
    }

    public static boolean validateItemCategory(String category) {

        int range = Integer.parseInt(category);
        //check are all digits?
        for (int i = 0; i < category.length(); i++) {
            if (Character.isDigit(category.charAt(i)) == false) {
                return false;
            }
        }
        if (range <= 0 || range > 3) {
            return false;
        }

        return true;
    }
